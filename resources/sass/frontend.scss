@use "sass:math";

@import "theme/theme_variables"; // <-------- Add your variables into this file. Also add variables to overwrite Bootstrap or Understrap variables here
// @import "bootstrap/scss/bootstrap"; // <-------- Loads Bootstrap

@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

// Layout & components
// @import "bootstrap/scss/forms";
// @import "bootstrap/scss/buttons";
// @import "bootstrap/scss/alert";
// @import "bootstrap/scss/containers";
// @import "bootstrap/scss/grid";

$utilities: map-merge(
  $utilities,
  (
    "position":
      map-merge(
        map-get($utilities, "position"),
        (
          responsive: true,
        )
      ),
    "object-fit": (
      property: object-fit,
      class: object,
      responsive: true,
      values: (
        fill: fill,
        contain: contain,
        cover: cover,
        none: none,
        scale-down: scale-down,
      ),
    ),
    "background-size": (
      property: background-size,
      class: bg,
      responsive: true,
      values: (
        fill: fill,
        contain: contain,
        cover: cover,
        none: none,
        scale-down: scale-down,
      ),
    ),
    "background-blend-mode": (
      property: background-blend-mode,
      class: bg-blend,
      values: normal multiply screen overlay darken lighten color-dodge
        saturation color luminosity,
    ),
    "background-repeat": (
      property: background-repeat,
      class: bg,
      responsive: true,
      values: (
        repeat: repeat,
        no-repeat: no-repeat,
      ),
    ),
    "width":
      map-merge(
        map-get($utilities, "width"),
        (
          responsive: true,
        )
      ),
    "height":
      map-merge(
        map-get($utilities, "height"),
        (
          values:
            map-merge(
              map-get(map-get($utilities, "height"), "values"),
              (
                100vh: 100vh,
              )
            ),
        )
      ),
    "padding-top":
      map-merge(
        map-get($utilities, "padding-top"),
        (
          responsive: true,
          values:
            map-merge(
              map-get(map-get($utilities, "padding-top"), "values"),
              (
                6: $spacer * 4,
                7: $spacer * 6,
                8: $spacer * 8,
                9: $spacer * 10,
                10: $spacer * 12,
              )
            ),
        )
      ),
    "padding-end":
      map-merge(
        map-get($utilities, "padding-end"),
        (
          responsive: true,
          values:
            map-merge(
              map-get(map-get($utilities, "padding-end"), "values"),
              (
                6: $spacer * 4,
                7: $spacer * 6,
                8: $spacer * 8,
                9: $spacer * 10,
                10: $spacer * 12,
              )
            ),
        )
      ),
    "padding-bottom":
      map-merge(
        map-get($utilities, "padding-bottom"),
        (
          responsive: true,
          values:
            map-merge(
              map-get(map-get($utilities, "padding-bottom"), "values"),
              (
                6: $spacer * 4,
                7: $spacer * 6,
                8: $spacer * 8,
                9: $spacer * 10,
                10: $spacer * 12,
              )
            ),
        )
      ),
    "padding-start":
      map-merge(
        map-get($utilities, "padding-start"),
        (
          responsive: true,
          values:
            map-merge(
              map-get(map-get($utilities, "padding-start"), "values"),
              (
                6: $spacer * 4,
                7: $spacer * 6,
                8: $spacer * 8,
                9: $spacer * 10,
                10: $spacer * 12,
              )
            ),
        )
      ),
    "min-height": (
      property: min-height,
      class: min-h,
      values:
        map-merge(
          map-get(map-get($utilities, "height"), "values"),
          (
            100vh: 100vh,
          )
        ),
    ),
    "column-gap": (
      css-var: true,
      css-variable-name: col-gap,
      class: gx,
      responsive: true,
      values: (
        0: 0px,
        1: 10px,
        2: 20px,
        3: 30px,
        4: 40px,
        5: 50px,
        6: 60px,
        7: 70px,
        8: 80px,
        9: 90px,
        10: 100px,
      ),
    ),
    "row-gap": (
      css-var: true,
      css-variable-name: row-gap,
      class: gy,
      values: (
        0: 0px,
        1: 10px,
        2: 20px,
        3: 30px,
        4: 40px,
        5: 50px,
        6: 60px,
        7: 70px,
        8: 80px,
        9: 90px,
        10: 100px,
      ),
    ),
    "module-gap": (
      css-var: true,
      css-variable-name: module-gap,
      class: mg,
      values: (
        1: 10px,
        2: 20px,
        3: 30px,
        4: 40px,
        5: 50px,
      ),
    ),
    "font-weight": (
      property: font-weight,
      class: font,
      values: normal bold,
    ),
  )
);

@import "bootstrap/scss/utilities/api";

// @import "theme/colors"; // <-------- This creates the necessary bootstrap color classes.
// @import "theme/blocks"; // <-------- This adds Bootstrap styles to blocks.

@import "mixins/mixins";
@import "theme/layout";
