@use "sass:math";

@import "theme/theme_variables"; // <-------- Add your variables into this file. Also add variables to overwrite Bootstrap or Understrap variables here
// @import "bootstrap/scss/bootstrap"; // <-------- Loads Bootstrap

@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

@import "glightbox/dist/css/glightbox.min.css";

// Layout & components
// @import "bootstrap/scss/forms";
// @import "bootstrap/scss/buttons";
// @import "bootstrap/scss/alert";
// @import "bootstrap/scss/containers";
// @import "bootstrap/scss/grid";

$box-model-sizing: ();
@for $i from 0 through 12 {
  $box-model-sizing: map-merge(
    $box-model-sizing,
    (#{$i}: #{$i}rem, #{$i}\.5: calc(#{$i}rem + 0.5rem))
  );
}

$order: ();
@for $i from 0 through 12 {
  $order: map-merge(
    $order,
    (
      $i: #{$i},
    )
  );
}

$gaps: ();
@for $i from 0 through 12 {
  $gaps: map-merge(
    $gaps,
    (#{$i}: #{$i}rem !important, #{$i}\.5: calc(#{$i}rem + 0.5rem) !important)
  );
}

$grid-template: ();
@for $i from 0 through 12 {
  $grid-template: map-merge(
    $grid-template,
    (
      $i: repeat(#{$i}, minmax(0, 1fr)),
    )
  );
}

$width: (
  none: none,
  auto: auto,
  fit: fit-content,
  0: 0,
  25: 25%,
  33: 33.33%,
  50: 50%,
  66: 66.66%,
  75: 75%,
  100: 100%,
  100vw: 100vw,
);

$height: (
  auto: auto,
  0: 0,
  100: 100%,
  50vh: 50vh,
  100vh: 100vh,
);

$utilities: map-merge(
  $utilities,
  (
    "position":
      map-merge(
        map-get($utilities, "position"),
        (
          responsive: true,
        )
      ),
    "object-fit": (
      property: object-fit,
      class: object,
      responsive: true,
      values: (
        fill: fill,
        contain: contain,
        cover: cover,
        none: none,
        scale-down: scale-down,
      ),
    ),
    "top": (
      property: top,
      class: top,
      responsive: true,
      values:
        map-merge(
          map-get(map-get($utilities, "top"), "values"),
          $box-model-sizing
        ),
    ),
    "right": (
      property: right,
      class: right,
      responsive: true,
      values:
        map-merge(
          map-get(map-get($utilities, "top"), "values"),
          $box-model-sizing
        ),
    ),
    "bottom": (
      property: bottom,
      class: bottom,
      responsive: true,
      values:
        map-merge(
          map-get(map-get($utilities, "bottom"), "values"),
          $box-model-sizing
        ),
    ),
    "left": (
      property: left,
      class: left,
      responsive: true,
      values:
        map-merge(
          map-get(map-get($utilities, "top"), "values"),
          $box-model-sizing
        ),
    ),
    "start": (
      property: left,
      class: start,
      responsive: true,
      values:
        map-merge(
          map-get(map-get($utilities, "start"), "values"),
          $box-model-sizing
        ),
    ),
    "end": (
      property: right,
      class: end,
      responsive: true,
      values:
        map-merge(
          map-get(map-get($utilities, "end"), "values"),
          $box-model-sizing
        ),
    ),
    "box-shadow": (
      property: box-shadow,
      class: shadow,
      responsive: false,
      values: (
        sm: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075),
        md: 0 0.75rem 1.5rem rgba(0, 0, 0, 0.175),
        lg: 0 1rem 3rem rgba(0, 0, 0, 0.2),
        xl: 0 1.5rem 5rem rgba(0, 0, 0, 0.25),
        2xl: 0 2rem 8rem rgba(0, 0, 0, 0.3),
        inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06),
        outline: 0 0 0 3px rgba(66, 153, 225, 0.5),
      ),
    ),
    "grid-rows": (
      property: grid-template-rows,
      class: grid-rows,
      responsive: true,
      values: $grid-template,
    ),
    "grid-cols": (
      property: grid-template-columns,
      class: grid-cols,
      responsive: true,
      values: $grid-template,
    ),
    'index': (
      property: z-index,
      class: z,
      responsive: true,
      values: map-merge($order, (-1: -1, 99: 99, 999: 999, 9999: 9999)),
    ),
    "order": (
      property: order,
      class: order,
      responsive: true,
      values: map-merge($order, (-1: -1, 99: 99, 999: 999, 9999: 9999)),
    ),
    "min-width": (
      property: min-width,
      class: min-w,
      responsive: true,
      values: map-merge(map-get(map-get($utilities, "width"), "values"), $width),
    ),
    "width":
      map-merge(
        map-get($utilities, "width"),
        (
          responsive: true,
          values:
            map-merge(map-get(map-get($utilities, "width"), "values"), $width),
        )
      ),
    "max-width": (
      property: max-width,
      class: max-w,
      responsive: true,
      values: map-merge(map-get(map-get($utilities, "width"), "values"), $width),
    ),
    "min-height": (
      property: min-height,
      class: min-h,
      responsive: true,
      values:
        map-merge(map-get(map-get($utilities, "height"), "values"), $height),
    ),
    "height":
      map-merge(
        map-get($utilities, "height"),
        (
          responsive: true,
          values:
            map-merge(map-get(map-get($utilities, "height"), "values"), $height),
        )
      ),
    "max-height": (
      property: max-height,
      class: max-h,
      responsive: true,
      values:
        map-merge(map-get(map-get($utilities, "height"), "values"), $height),
    ),
    "margin":
      map-merge(
        map-get($utilities, "margin"),
        (
          responsive: true,
          values:
            map-merge(
              $box-model-sizing,
              (
                auto: auto,
              )
            ),
        )
      ),
    "margin-y":
      map-merge(
        map-get($utilities, "margin-y"),
        (
          responsive: true,
          values:
            map-merge(
              $box-model-sizing,
              (
                auto: auto,
              )
            ),
        )
      ),
    "margin-top":
      map-merge(
        map-get($utilities, "margin-top"),
        (
          responsive: true,
          values:
            map-merge(
              $box-model-sizing,
              (
                auto: auto,
              )
            ),
        )
      ),
    "margin-end":
      map-merge(
        map-get($utilities, "margin-end"),
        (
          responsive: true,
          values:
            map-merge(
              $box-model-sizing,
              (
                auto: auto,
              )
            ),
        )
      ),
    "margin-bottom":
      map-merge(
        map-get($utilities, "margin-bottom"),
        (
          responsive: true,
          values:
            map-merge(
              $box-model-sizing,
              (
                auto: auto,
              )
            ),
        )
      ),
    "margin-start":
      map-merge(
        map-get($utilities, "margin-start"),
        (
          responsive: true,
          values:
            map-merge(
              $box-model-sizing,
              (
                auto: auto,
              )
            ),
        )
      ),
    "padding":
      map-merge(
        map-get($utilities, "padding"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "padding-x":
      map-merge(
        map-get($utilities, "padding-x"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "padding-y":
      map-merge(
        map-get($utilities, "padding-y"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "padding-top":
      map-merge(
        map-get($utilities, "padding-top"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "padding-end":
      map-merge(
        map-get($utilities, "padding-end"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "padding-bottom":
      map-merge(
        map-get($utilities, "padding-bottom"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "padding-start":
      map-merge(
        map-get($utilities, "padding-start"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "gap":
      map-merge(
        map-get($utilities, "gap"),
        (
          responsive: true,
          values: $box-model-sizing,
        )
      ),
    "column-gap": (
      css-var: true,
      css-variable-name: col-gap,
      class: col-gap,
      responsive: true,
      values: $gaps,
    ),
    "gx-gap": (
      css-var: true,
      css-variable-name: gutter-x,
      class: gx,
      responsive: true,
      values: $gaps,
    ),
    "row-gap": (
      css-var: true,
      css-variable-name: row-gap,
      class: row-gap,
      responsive: true,
      values: $gaps,
    ),
    "gy-gap": (
      css-var: true,
      css-variable-name: gutter-y,
      class: gy,
      responsive: true,
      values: $gaps,
    ),
    "module-gap": (
      css-var: true,
      css-variable-name: module-gap,
      class: mg,
      values: $box-model-sizing,
    ),
    "background-color": (
      property: background-color,
      class: bg,
      local-vars: (
        "bg-opacity": 1,
      ),
      responsive: true,
      values:
        map-merge(
          $utilities-bg-colors,
          (
            tertiary: rgba(var(--bs-tertiary-rgb), var(--bs-text-opacity)),
          )
        ),
    ),
    "background-size": (
      property: background-size,
      class: bg,
      responsive: true,
      values: (
        none: none,
        100: 100% auto,
        cover: cover,
        contain: contain,
        fit: fit,
        fill: fill,
        scale-down: scale-down,
      ),
    ),
    "background-position": (
      property: background-position,
      class: bg,
      responsive: true,
      values: (
        left: left,
        left-top: left top,
        left-bottom: left bottom,
        right: right,
        right-top: right top,
        right-bottom: right bottom,
        center: center,
        center-top: center top,
        center-bottom: center bottom,
      ),
    ),
    "background-repeat": (
      property: background-repeat,
      class: bg,
      responsive: true,
      values: (
        repeat: repeat,
        repeat-x: repeat-x,
        repeat-y: repeat-y,
        no-repeat: no-repeat,
      ),
    ),
    "background-blend-mode": (
      property: background-blend-mode,
      class: bg-blend,
      values: normal multiply screen overlay darken lighten color-dodge
        saturation color luminosity,
    ),
    "color": (
      property: color,
      class: text,
      local-vars: (
        "text-opacity": 1,
      ),
      responsive: true,
      values:
        map-merge(
          map-get(map-get($utilities, "color"), "values"),
          (
            tertiary: rgba(var(--bs-tertiary-rgb), var(--bs-text-opacity)),
          )
        ),
    ),
    "cursor": (
      property: cursor,
      class: cursor,
      values: auto default none context-menu help pointer progress wait cell
        crosshair text vertical-text alias copy move no-drop not-allowed
        e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize
        w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize
        row-resize all-scroll zoom-in zoom-out grab grabbing,
    ),
    "font-family": (
      property: font-family,
      class: font-family,
      responsive: true,
      values: serif sans-serif,
    ),
    "fs": (
      property: font-size,
      class: fs,
      responsive: true,
      values: (
        1: $h1-font-size,
        2: $h2-font-size,
        3: $h3-font-size,
        4: $h4-font-size,
        5: $h5-font-size,
        6: $h6-font-size,
      ),
    ),
    "font-weight": (
      property: font-weight,
      class: font,
      responsive: true,
      values: 100 200 300 normal 500 600 bold 800 900,
    ),
    "object-position": (
      property: object-position,
      class: object-position,
      responsive: true,
      values: (
        left: left,
        left-top: left top,
        left-bottom: left bottom,
        right: right,
        right-top: right top,
        right-bottom: right bottom,
        center: center,
        center-top: center top,
        center-bottom: center bottom,
      ),
    ),
  )
);

[class*="gx-"] {
  column-gap: var(--bs-gutter-x, var(--bs-col-gap));
}

[class*="gy-"] {
  row-gap: var(--bs-gutter-y, var(--bs-row-gap));
}

.hide-sm {
  @include media-breakpoint-down(sm) {
    display: none !important;
  }
}
@include media-breakpoint-only(md) {
  .hide-md {
    display: none !important;
  }
}
@include media-breakpoint-up(lg) {
  .hide-lg {
    display: none !important;
  }
}

@import "bootstrap/scss/utilities/api";

// @import "theme/colors"; // <-------- This creates the necessary bootstrap color classes.
// @import "theme/blocks"; // <-------- This adds Bootstrap styles to blocks.

@import "mixins/mixins";
@import "theme/layout";

@import "theme/taggables";

// Components
@import "components/videos";
@import "components/sitewide-message";
